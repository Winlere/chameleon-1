#
# This file describes the common rules for the stages
#
---
default:
  image: registry.gitlab.inria.fr/solverstack/docker/distrib
  tags: ['ci.inria.fr', 'linux', 'large']

.only-master:
  except: ['schedule']
  interruptible: true
  only:
    - master@solverstack/chameleon
    - /^ci-.*$/

.only-branches:
  except: ['schedule']
  interruptible: true
  only:
    - merge_requests
    - master@solverstack/chameleon
    - /^ci-.*$/

.build_script_template:
  stage: build
  extends: .only-branches
  script:
    - export LOGNAME=chameleon_${VERSION}.log
    - echo $LOGNAME
    - echo build BUILD_OPTIONS $BUILD_OPTIONS | tee -a ${LOGNAME}
    - echo build VERSION       $VERSION       | tee -a ${LOGNAME}
    - ls -l *.log
    - (cd build-$VERSION &&
       scan-build -plist --intercept-first --exclude CMakeFiles --analyze-headers -o analyzer_reports
       cmake -C ../cmake_modules/gitlab-ci-initial-cache.cmake .. $BUILD_OPTIONS &&
       scan-build -plist --intercept-first --exclude CMakeFiles --analyze-headers -o analyzer_reports
       ctest --no-compress-output -j 5 -V
             -T Build
             | tee ../${LOGNAME})
    - (cd build-$VERSION &&
       make install | tee -a ../${LOGNAME} &&
       rm install/ -r)
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 2 days
    untracked: true
    when: always

.test_script_template:
  stage: test
  script:
    - export LOGNAME=chameleon_${VERSION}_${CATEGORY}_${PRECISION}
    - echo $LOGNAME
    - echo test TESTS_RESTRICTION $TESTS_RESTRICTION  | tee -a ${LOGNAME}.log
    - echo test VERSION $VERSION     | tee -a ${LOGNAME}.log
    - echo test CATEGORY $CATEGORY   | tee -a ${LOGNAME}.log
    - echo test PRECISION $PRECISION | tee -a ${LOGNAME}.log
    - ls -l *.log
    - (cd build-$VERSION &&
       eval "ctest --no-compress-output
             $TESTS_RESTRICTION
             -T Test
             --output-junit ../${LOGNAME}.junit
             | tee -a ../${LOGNAME}.log")
    - gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o ${LOGNAME}.cov --root ${CI_PROJECT_DIR}
    - lcov --directory build-$VERSION --capture --output-file ${LOGNAME}.lcov
    - cp ${LOGNAME}.junit junit.xml
    - cp ${LOGNAME}.cov coverage.xml
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 2 days
    untracked: true
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: junit.xml

.bench_plafrim_common:
  only: ['schedule']
  stage: test
  tags: ['plafrim']
  timeout: 1 week
  before_script:
    - git submodule update --init --recursive
  script:
    - ./tools/bench/plafrim/run.sh
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 1 week
    paths:
      - "chameleon-$NODE-$MPI-$SLURM_NP.err"
      - "chameleon-$NODE-$MPI-$SLURM_NP.out"
      - "tools/bench/plafrim/chameleon.csv"
      - "tools/bench/plafrim/results/$JUBE_ID"
  variables:
    PLATFORM: plafrim
