#
# This file describes the common rules for the stages
#
---
default:
  image: registry.gitlab.inria.fr/solverstack/docker/distrib
  tags: ['ci.inria.fr', 'linux', 'large']

# push event: executed only if the source branch name is master or starts with ci-
# merge request event: not executed
# schedule event: not executed
.only-master:
  interruptible: true
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^ci-.*$/) && $CI_PIPELINE_SOURCE != "schedule"

# push event: executed only if the source branch name is master or starts with ci-
# merge request event: executed if the source branch name does not start with notest-
# schedule event: not executed
.only-merge-request:
  interruptible: true
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^ci-.*$/) && $CI_PIPELINE_SOURCE != "schedule"
    - if: ($CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^notest-.*$/) && $CI_PIPELINE_SOURCE != "schedule"

.build_script_template:
  stage: build
  extends: .only-merge-request
  script:
    - ./.gitlab/build.sh
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 2 days
    untracked: true
    when: always

.test_script_template:
  stage: test
  script:
    - ./.gitlab/test.sh
  coverage: /^\s*lines......:\s*\d+.\d+\%/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 2 days
    untracked: true
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: junit.xml

.bench_plafrim_common:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  stage: test
  tags: ['plafrim']
  timeout: 1 week
  before_script:
    - git submodule update --init --recursive
  script:
    - ./tools/bench/plafrim/run.sh
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 1 week
    paths:
      - "chameleon-$NODE-$MPI-$SLURM_NP.err"
      - "chameleon-$NODE-$MPI-$SLURM_NP.out"
      - "tools/bench/plafrim/chameleon.csv"
      - "tools/bench/plafrim/results/$JUBE_ID"
  variables:
    PLATFORM: plafrim
